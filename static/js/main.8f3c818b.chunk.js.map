{"version":3,"sources":["logo.svg","assets/images/bg.jpg","Calculator.js","Home.js","Calculator1.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","props","myChangeHandler","event","nam","target","name","val","value","err","Number","setState","errormessage","handleChange","bind","handleSubmit","state","tollgates","amount","VClass","From","Via","To","this","updateCost","console","log","preventDefault","getTollgates","total","route1","route2","Departure","Destination","updateData","alert","className","onSubmit","Row","Col","xs","FormGroup","Label","for","Input","type","id","onChange","sm","Card","CardBody","disabled","ListGroup","ListGroupItem","Badge","pill","Component","Home","useState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f3c818b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/bg.ce6243af.jpg\";","import React, { Component } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormFeedback, FormText } from 'reactstrap';\r\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { FaMapMarkedAlt,FaMapSigns,FaMapMarked ,FaCar } from 'react-icons/fa';\r\nimport bg from './assets/images/bg.jpg';\r\nimport { ListGroup, ListGroupItem ,Badge } from 'reactstrap';\r\nexport default class Calculator extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.state = {\r\n          tollgates: null,\r\n          amount: null,\r\n         VClass: '',\r\n         From: '',\r\n         Via: '',\r\n         To: '',\r\n         errormessage: ''\r\n      };\r\n   }\r\n   \r\n   handleChange(event) {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({[nam]: val});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n      let amount= null;\r\n      let tollgates= null;\r\n      \r\n      if(this.state.VClass === 'Light motor-vehicles') {\r\n            amount= 120;\r\n            this.updateCost(amount);\r\n        } else if(this.state.VClass === 'Heavy vehicles') {\r\n           amount= 300;\r\n            this.updateCost(amount);\r\n        }\r\n        else if(this.state.VClass === 'Buses') {\r\n           amount= 240;\r\n            this.updateCost(amount);\r\n        }\r\n        else if(this.state.VClass === 'Minibuses') {\r\n           amount= 180;\r\n            this.updateCost(amount);\r\n        }\r\n        else if(this.state.VClass === 'Haulage trucks') {\r\n           amount= 590;\r\n            this.updateCost(amount);\r\n        } else {\r\n            console.log('Error');\r\n        }\r\n      \r\n    event.preventDefault();\r\n  }\r\n  updateCost(amount){\r\n      this.getTollgates(amount);\r\n  }\r\n  updateData(tollgates , amount){\r\n                this.setState({\r\n                amount: amount,\r\n                tollgates: tollgates,\r\n                total: amount * tollgates,\r\n                route1: 1,\r\n                route2: 2,\r\n            });\r\n  }\r\n  getTollgates(amount){\r\n      let Departure = this.state.From;\r\n      let Detour = this.state.Via;\r\n      let Destination = this.state.To;\r\n        let tollgates = null;\r\n        let total = null;\r\n      switch(Departure) {\r\n      case 'Harare':\r\n        if(Destination === 'Mutare') {\r\n            tollgates = 3;\r\n            this.updateData(tollgates ,amount);\r\n        } else if(Destination === 'Marondera') {\r\n           tollgates = 1;\r\n           this.updateData(tollgates ,amount);\r\n        }\r\n        else if(Destination === 'Rusape') {\r\n          tollgates = 3;\r\n          this.updateData(tollgates ,amount);\r\n        }\r\n        else if(Destination === 'Bulawayo') {\r\n           let tollgates = 4;\r\n           this.updateData(tollgates ,amount);\r\n        }\r\n        else if(Destination === 'Norton') {\r\n           tollgates = 0;\r\n           this.updateData(tollgates ,amount);\r\n        }\r\n        else if(Destination === 'Masvingo') {\r\n           tollgates = 4;\r\n           this.updateData(tollgates ,amount);\r\n        }\r\n         else {\r\n            console.log('Error');\r\n        }\r\n        break;\r\n      \r\n      case 'Bulawayo':\r\n        if(Destination === 'Mutare'){\r\n            let tollgates = 3;\r\n        }else{\r\n            tollgates = 0;\r\n        }\r\n        break;\r\n \r\n      case 'Mutare':\r\n        if(Destination === 'Harare') {\r\n            tollgates = 3;\r\n            this.updateData(tollgates ,amount);\r\n        } else if(Destination === 'Marondera') {\r\n           tollgates = 2;\r\n           this.updateData(tollgates ,amount);\r\n        }\r\n        else if(Destination === 'Rusape') {\r\n          tollgates = 2;\r\n          this.updateData(tollgates ,amount);\r\n        }\r\n        else if(Destination === 'Bulawayo') {\r\n           let tollgates = 7;\r\n           this.updateData(tollgates ,amount);\r\n        }\r\n        else if(Destination === 'Norton') {\r\n           tollgates = 3;\r\n           this.updateData(tollgates ,amount);\r\n        }\r\n        else if(Destination === 'Masvingo') {\r\n           tollgates = 1;\r\n           this.updateData(tollgates ,amount);\r\n        }\r\n         else {\r\n            console.log('Error');\r\n        }\r\n        break;\r\n \r\n      case 'Masvingo':\r\n        console.log('Masvingo');\r\n        break;\r\n \r\n      default:\r\n        alert(\"NUMBER NOT FOUND\");\r\n      }\r\n \r\n  }\r\n   myChangeHandler = (event) => {\r\n      let nam = event.target.name;\r\n      let val = event.target.value;\r\n      let err = '';\r\n      if (nam === \"id\") {\r\n         if (val !=\"\" && !Number(val)) {\r\n            err = <strong>Your id must be a number</strong>;\r\n         }\r\n      }\r\n      this.setState({errormessage: err});\r\n      this.setState({[nam]: val});\r\n   }\r\n\r\n   \r\n   render() {\r\n      return (\r\n          <>\r\n          <div className=\"container con\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <br/>\r\n            <Row>\r\n            <Col xs=\"3\">\r\n            <FormGroup>\r\n            <Label className=\"lab\" for=\"VClass\"><FaCar/> Vehicle Type</Label>\r\n            <Input type=\"select\" name=\"VClass\" id=\"VClass\" value={this.state.VClass} onChange={this.handleChange}>\r\n                <option>Light motor-vehicles</option>\r\n                <option>Heavy vehicles</option>\r\n                <option>Buses</option>\r\n                <option>Minibuses</option>\r\n                <option>Haulage trucks</option>\r\n            </Input>\r\n            </FormGroup>\r\n            </Col>\r\n             <Col xs=\"3\">\r\n            <FormGroup>\r\n            <Label className=\"lab\" for=\"From\"><FaMapMarkedAlt/> Departure</Label>\r\n            <Input type=\"select\" name=\"From\" id=\"From\" value={this.state.From} onChange={this.handleChange}>\r\n                <option>Harare</option>\r\n                <option>Mutare</option>\r\n                <option>Masvingo</option>\r\n                <option>Bulawayo</option>\r\n                <option>Hwange</option>\r\n            </Input>\r\n            </FormGroup>\r\n            </Col>\r\n            <Col xs=\"3\">\r\n            <FormGroup>\r\n            <Label className=\"lab\" for=\"Via\" ><FaMapSigns/> Via Route</Label>\r\n            <Input type=\"select\" name=\"Via\" id=\"Via\" value={this.state.Via} onChange={this.handleChange}>\r\n                <option>Harare</option>\r\n                <option>Mutare</option>\r\n                <option>Masvingo</option>\r\n                <option>Bulawayo</option>\r\n                <option>Hwange</option>\r\n            </Input>\r\n            </FormGroup>\r\n            </Col>\r\n            <Col xs=\"3\">\r\n            <FormGroup>\r\n            <Label className=\"lab\" for=\"To\" ><FaMapMarked/> Destination</Label>\r\n            <Input type=\"select\" name=\"To\" id=\"To\" value={this.state.To} onChange={this.handleChange}>\r\n                <option>Harare</option>\r\n                <option>Mutare</option>\r\n                <option>Masvingo</option>\r\n                <option>Bulawayo</option>\r\n                <option>Hwange</option>\r\n            </Input>\r\n            </FormGroup>\r\n            </Col>\r\n            </Row>\r\n            <hr/>\r\n         <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n      <div className=\"container\">\r\n       <hr/>\r\n          <Row>\r\n            <Col sm=\"4\">\r\n            \r\n            <Card>\r\n            \r\n              <CardBody>\r\n              <Label >Your Route</Label>\r\n              <hr/>\r\n                <Input value={this.state.From} disabled/><br/>\r\n                <Input value={this.state.Via} disabled/><br/>\r\n                <Input value={this.state.To} disabled/><br/>\r\n              </CardBody>\r\n            </Card>\r\n            </Col>\r\n            <Col sm=\"4\" >\r\n            <Card>\r\n              \r\n              <CardBody>\r\n                <Label >Tollgates</Label>\r\n                <hr/>\r\n                <ListGroup>\r\n                <ListGroupItem className=\"justify-content-between\">{this.state.From} - {this.state.To}<Badge pill>{this.state.tollgates}</Badge></ListGroupItem>\r\n               \r\n                </ListGroup>\r\n              </CardBody>\r\n            </Card>\r\n            </Col>\r\n            <Col sm=\"4\" >\r\n            <Card>\r\n              <CardBody>\r\n                <Label >Tolling Cost</Label>\r\n                <hr/>\r\n                 <ListGroup>\r\n                <ListGroupItem className=\"justify-content-between\">{this.state.VClass}</ListGroupItem>\r\n               \r\n                <ListGroupItem className=\"justify-content-between\">{this.state.amount} * {this.state.tollgates}</ListGroupItem>\r\n                 <ListGroupItem className=\"justify-content-between\"><strong>ZWL${this.state.total}</strong></ListGroupItem>\r\n                </ListGroup>\r\n              </CardBody>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n         </>\r\n      );\r\n   }\r\n}","import React, { useState } from 'react';\r\nimport Calculator from './Calculator';\r\nimport Calculator1 from './Calculator1';\r\nconst Home = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <>\r\n      <Calculator/>\r\n      </>\r\n\r\n    );\r\n  }\r\n  export default Home;","import React, { Component } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormFeedback, FormText } from 'reactstrap';\r\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { FaMapMarkedAlt,FaMapSigns,FaMapMarked ,FaCar } from 'react-icons/fa';\r\nimport bg from './assets/images/bg.jpg';\r\nimport { ListGroup, ListGroupItem ,Badge } from 'reactstrap';\r\nexport default class Calculator extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.state = {\r\n          tollgates: null,\r\n          amount: null,\r\n         VClass: '',\r\n         From: '',\r\n         Via: '',\r\n         To: '',\r\n         errormessage: ''\r\n      };\r\n   }\r\n   \r\n   handleChange(event) {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({[nam]: val});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n\r\n\r\n      let amount= 120;\r\n      let tollgates= 3;\r\n      let total = amount * tollgates;\r\n     this.setState({\r\n         amount: amount,\r\n         tollgates: tollgates,\r\n         total: total,\r\n         route1: 1,\r\n         route2: 2,\r\n         });\r\n    event.preventDefault();\r\n  }\r\n   myChangeHandler = (event) => {\r\n      let nam = event.target.name;\r\n      let val = event.target.value;\r\n      let err = '';\r\n      if (nam === \"id\") {\r\n         if (val !=\"\" && !Number(val)) {\r\n            err = <strong>Your id must be a number</strong>;\r\n         }\r\n      }\r\n      this.setState({errormessage: err});\r\n      this.setState({[nam]: val});\r\n   }\r\n\r\n   \r\n   render() {\r\n      return (\r\n          <>\r\n          <div className=\"container con\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <br/>\r\n            <h1> Second</h1>\r\n            <Row>\r\n            <Col xs=\"3\">\r\n            <FormGroup>\r\n            <Label className=\"lab\" for=\"VClass\"><FaCar/> Vehicle Type</Label>\r\n            <Input type=\"select\" name=\"VClass\" id=\"VClass\" value={this.state.VClass} onChange={this.handleChange}>\r\n                <option>Light Weight Motor</option>\r\n                <option>Heavy Vehicle</option>\r\n                <option>Bus</option>\r\n                <option>Mini Bus</option>\r\n                <option>Haulage Truck</option>\r\n            </Input>\r\n            </FormGroup>\r\n            </Col>\r\n             <Col xs=\"3\">\r\n            <FormGroup>\r\n            <Label className=\"lab\" for=\"From\"><FaMapMarkedAlt/> Departure</Label>\r\n            <Input type=\"select\" name=\"From\" id=\"From\" value={this.state.From} onChange={this.handleChange}>\r\n                <option>Harare</option>\r\n                <option>Mutare</option>\r\n                <option>Masvingo</option>\r\n                <option>Bulawayo</option>\r\n                <option>Hwange</option>\r\n            </Input>\r\n            </FormGroup>\r\n            </Col>\r\n            <Col xs=\"3\">\r\n            <FormGroup>\r\n            <Label className=\"lab\" for=\"Via\" ><FaMapSigns/> Via Route</Label>\r\n            <Input type=\"select\" name=\"Via\" id=\"Via\" value={this.state.Via} onChange={this.handleChange}>\r\n                <option>Harare</option>\r\n                <option>Mutare</option>\r\n                <option>Masvingo</option>\r\n                <option>Bulawayo</option>\r\n                <option>Hwange</option>\r\n            </Input>\r\n            </FormGroup>\r\n            </Col>\r\n            <Col xs=\"3\">\r\n            <FormGroup>\r\n            <Label className=\"lab\" for=\"To\" ><FaMapMarked/> Destination</Label>\r\n            <Input type=\"select\" name=\"To\" id=\"To\" value={this.state.To} onChange={this.handleChange}>\r\n                <option>Harare</option>\r\n                <option>Mutare</option>\r\n                <option>Masvingo</option>\r\n                <option>Bulawayo</option>\r\n                <option>Hwange</option>\r\n            </Input>\r\n            </FormGroup>\r\n            </Col>\r\n            </Row>\r\n            <hr/>\r\n         <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n      <div className=\"container\">\r\n       <hr/>\r\n          <Row>\r\n            <Col sm=\"4\">\r\n            \r\n            <Card>\r\n            \r\n              <CardBody>\r\n              <Label >Your Route</Label>\r\n              <hr/>\r\n                <Input value={this.state.From} disabled/><br/>\r\n                <Input value={this.state.Via} disabled/><br/>\r\n                <Input value={this.state.To} disabled/><br/>\r\n              </CardBody>\r\n            </Card>\r\n            </Col>\r\n            <Col sm=\"4\" >\r\n            <Card>\r\n              \r\n              <CardBody>\r\n                <Label >Tollgates</Label>\r\n                <hr/>\r\n                <ListGroup>\r\n                <ListGroupItem className=\"justify-content-between\">{this.state.From} - {this.state.To}<Badge pill>{this.state.tollgates}</Badge></ListGroupItem>\r\n               \r\n                </ListGroup>\r\n              </CardBody>\r\n            </Card>\r\n            </Col>\r\n            <Col sm=\"4\" >\r\n            <Card>\r\n              <CardBody>\r\n                <Label >Tolling Cost</Label>\r\n                <hr/>\r\n                 <ListGroup>\r\n                <ListGroupItem className=\"justify-content-between\">{this.state.VClass}</ListGroupItem>\r\n                <ListGroupItem className=\"justify-content-between\">{this.state.total}</ListGroupItem>\r\n                <ListGroupItem className=\"justify-content-between\">{this.state.amount} * {this.state.tollgates}</ListGroupItem>\r\n                </ListGroup>\r\n              </CardBody>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n         </>\r\n      );\r\n   }\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}